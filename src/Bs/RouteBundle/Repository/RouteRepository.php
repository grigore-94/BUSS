<?php

namespace Bs\RouteBundle\Repository;

use Bs\AppBundle\Models\SearchRoute;
use Bs\RouteBundle\Entity\Route;
use Bs\RouteBundle\Entity\RouteStation;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * RouteRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class RouteRepository extends EntityRepository
{
    /**
     * @param $filter
     * @return Route[]
     */
    public function findFilter($filter)
    {
        $stations = $this->createQueryBuilder('r')
            ->join('r.from', 'f')
            ->join('r.to', 't')
            ->where('f.city LIKE :filter')
            ->orWhere('f.region LIKE :filter')
            ->orWhere('t.city LIKE :filter')
            ->orWhere('t.region LIKE :filter')
            ->setParameter('filter', '%' . $filter . '%')
            ->getQuery()
            ->getResult();

        return $stations;
    }

    /**
     */
    public function searcheRoute(SearchRoute $searche, $day)
    {
        /** @var QueryBuilder $query */
        $query = $this->createQueryBuilder('r')
            ->where('r.activeDays Like :day')
            ->setParameters(
                [
                    'day' => '%' . $day . '%',
                ]
            )
            ->getQuery();

        $routes = $query->getResult();
        $responce = [];
        /** @var Route $route */
        foreach ($routes as $route) {
            $routeLocationsStart = [];
            $routeLocationsEnd = [];

            /** @var RouteStation $routeStation */
            foreach ($route->getRouteStations() as $routeStation) {
                if ($routeStation->getCanBeStart()) {
                    $routeLocationsStart[] = $routeStation->getStation()->getLocation();
                }
                $routeLocationsEnd[] = $routeStation->getStation()->getLocation();
            }

            if (in_array($searche->getFrom(), $routeLocationsStart) && in_array($searche->getTo(), $routeLocationsEnd)) {
                $responce[] = $route;
            }
        }
        return $responce;
    }
}
