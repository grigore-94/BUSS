<?php

namespace Bs\RouteBundle\Repository;

use Bs\AppBundle\Models\SearchRoute;
use Bs\RouteBundle\Entity\Route;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * RouteRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class RouteRepository extends EntityRepository
{
    /**
     * @param $filter
     * @return Route[]
     */
    public function findFilter($filter)
    {
        $stations = $this->createQueryBuilder('r')
            ->join('r.from', 'f')
            ->join('r.to', 't')
            ->where('f.city LIKE :filter')
            ->orWhere('f.region LIKE :filter')
            ->orWhere('t.city LIKE :filter')
            ->orWhere('t.region LIKE :filter')
            ->setParameter('filter', '%' . $filter . '%')
            ->getQuery()
            ->getResult();

        return $stations;
    }

    /**
     */
    public function searcheRoute(SearchRoute $searche, $day)
    {
        /** @var QueryBuilder $query */
        $query = $this->createQueryBuilder('r')
            ->join('r.routeStations', 'rsFrom')
            ->join('r.routeStations', 'rsTo')
            ->join('rsFrom.station', 'rtsFrom')
            ->join('rsTo.station', 'rtsTo')
            ->where('rsFrom = rsTo')
            ->andWhere('rtsFrom.location = :from')
          //  ->andWhere('rtsTo.location.id = :to')
            ->andWhere('r.activeDays Like :day')
            ->setParameters(
                [
                    'from' => $searche->getFrom(),
                 //   'to' => $searche->getTo()->getId(),
                    'day'=>'%'.$day.'%',

                ]
            )
           // ->groupBy('r.id')
            ->getQuery();
        $res = $query->getResult();

        return $res;
    }
}
